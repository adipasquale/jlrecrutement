//
// Utility classes
// --------------------------------------------------------------------------


// Mixins
// --------------------------------------------------------------------------

// http://nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix {
    &:before,
    &:after {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
    }
}

// https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
@mixin text-hide {
    font: #{0/0} a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin sr-only {
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
}

@mixin tab-focus {
    // Default
    outline: thin dotted;
    // WebKit
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px;
}

// Center vertically and horizontally something
@mixin middle {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin opacity($opacity) {
    opacity: $opacity;
    // IE8 filter
    $opacity-ie: ($opacity * 100);
    filter: alpha(opacity=$opacity-ie);
}

// Responsive utilities
@mixin responsive-visibility($parent) {
    #{$parent} {
        display: block !important;
    }
    table#{$parent}  { display: table; }
    tr#{$parent}     { display: table-row !important; }
    th#{$parent},
    td#{$parent}     { display: table-cell !important; }
}

@mixin responsive-invisibility($parent) {
    #{$parent} {
        display: none !important;
    }
}

// Transitions
@mixin transition($transition...) {
    -webkit-transition: $transition;
         -o-transition: $transition;
            transition: $transition;
}

@mixin transition-property($transition-property...) {
    -webkit-transition-property: $transition-property;
            transition-property: $transition-property;
}

@mixin transition-delay($transition-delay) {
    -webkit-transition-delay: $transition-delay;
            transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration...) {
    -webkit-transition-duration: $transition-duration;
            transition-duration: $transition-duration;
}

@mixin transition-timing-function($timing-function) {
    -webkit-transition-timing-function: $timing-function;
            transition-timing-function: $timing-function;
}

@mixin transition-transform($transition...) {
    -webkit-transition: -webkit-transform $transition;
       -moz-transition: -moz-transform $transition;
         -o-transition: -o-transform $transition;
            transition: transform $transition;
}

// Transform
@mixin translate($x, $y) {
    -webkit-transform: translate($x, $y);
        -ms-transform: translate($x, $y); // IE9 only
         -o-transform: translate($x, $y);
            transform: translate($x, $y);
}

@mixin translate3d($x, $y, $z) {
    -webkit-transform: translate3d($x, $y, $z);
            transform: translate3d($x, $y, $z);
}

@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees); // IE9 only
       -o-transform: rotate($degrees);
          transform: rotate($degrees);
}

// Backface visibility
@mixin backface-visibility($visibility){
    -webkit-backface-visibility: $visibility;
       -moz-backface-visibility: $visibility;
            backface-visibility: $visibility;
}

// Perspective
@mixin perspective($perspective) {
    -webkit-perspective: $perspective;
       -moz-perspective: $perspective;
            perspective: $perspective;
}
@mixin perspective-origin($perspective) {
    -webkit-perspective-origin: $perspective;
       -moz-perspective-origin: $perspective;
            perspective-origin: $perspective;
}


// Floats
// --------------------------------------------------------------------------

.clearfix {
    @include clearfix;
}


// Toggling content
// --------------------------------------------------------------------------

// Note: Deprecated .hide in favor of .hidden or .sr-only (as appropriate)
.hide {
    display: none !important;
}

.show {
    display: block !important;
}

.invisible {
    visibility: hidden;
}

.text-hide {
    @include text-hide;
}


// Hide from screenreaders and browsers
.hidden {
    display: none !important;
    visibility: hidden !important;
}


// Makes an element visually hidden, but accessible
// --------------------------------------------------------------------------

.sr-only {
    @include sr-only;
}


// Animations
// --------------------------------------------------------------------------

.fade {
    opacity: 0;
    transition: opacity .15s linear;

    &.in {
        opacity: 1;
    }
}

.collapse {
    display: none;

    &.in {
        display: block;
    }
}

.collapsing {
    position: relative;
    height: 0;
    overflow: hidden;
    transition: height .35s ease;
}


// Responsive utilities
// --------------------------------------------------------------------------

@media (max-width: $screen-xs-max) {
    @include responsive-invisibility('.hidden-xs');
}

@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    @include responsive-invisibility('.hidden-sm');
}

@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
    @include responsive-invisibility('.hidden-md');
}

@media (min-width: $screen-lg-min) {
    @include responsive-invisibility('.hidden-lg');
}
