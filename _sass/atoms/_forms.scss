//
// Forms
// --------------------------------------------------------------------------


// Variables
// --------------------------------------------------------------------------

$input-bg:                        #fff !default;
$input-bg-disabled:               $gray-lighter !default;
$input-color-disabled:            darken($gray-lighter, 15%) !default;

$input-color:                     $gray !default;
$input-border:                    #ccc !default;
$input-border-focus:              #66afe9 !default;

$input-border-radius:             $border-radius-base !default;
$input-border-radius-large:       $border-radius-large !default;
$input-border-radius-small:       $border-radius-small !default;

$input-color-placeholder:         #999 !default;

$input-height-base:               ($line-height-computed + ($padding-base-vertical * 2) + 2) !default;
$input-height-large:              (ceil($font-size-large * $line-height-large) + ($padding-large-vertical * 2) + 2) !default;
$input-height-small:              (floor($font-size-small * $line-height-small) + ($padding-small-vertical * 2) + 2) !default;

$legend-color:                    $gray-dark !default;
$legend-border-color:             #e5e5e5 !default;

$input-group-addon-bg:            $gray-lighter !default;
$input-group-addon-border-color:  $input-border !default;

$cursor-disabled:                 not-allowed !default;


// Mixins
// --------------------------------------------------------------------------

// Form control focus state
@mixin form-control-focus($color: $input-border-focus) {
    $color-rgba: rgba(red($color), green($color), blue($color), .6);

    &:focus {
        border-color: $color !important;
        outline: 0;
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px $color-rgba !important;
    }
}

// Form control sizing
@mixin input-size($parent, $input-height, $padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
    #{$parent} {
        height: $input-height;
        padding: $padding-vertical $padding-horizontal;
        font-size: $font-size;
        line-height: $line-height;
        border-radius: $border-radius;
    }

    select#{$parent} {
        height: $input-height;
        line-height: $input-height;
    }

    textarea#{$parent},
    select[multiple]#{$parent} {
        height: auto;
    }
}

// Customize placeholder text color
@mixin placeholder($color: $input-color-placeholder, $style:normal) {
    &::-moz-placeholder           { font-style: $style; color: $color; opacity: 1; } // Firefox
    &:-ms-input-placeholder       { font-style: $style; color: $color; } // Internet Explorer 10+
    &::-webkit-input-placeholder  { font-style: $style; color: $color; } // Safari and Chrome
}

// Form validation states
@mixin form-control-validation($text-color: #555, $border-color: #ccc, $background-color: #f5f5f5) {
    // Color the label and help text
    .help-block,
    .control-label,
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline,
    &.radio label,
    &.checkbox label,
    &.radio-inline label,
    &.checkbox-inline label  {
        color: $text-color;
    }
    // Set the border and box shadow on specific inputs to match
    .form-control {
        border-color: $border-color;
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075); // Redeclare so transitions work
        &:focus {
            border-color: darken($border-color, 10%);
            $shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten($border-color, 20%);
            box-shadow: $shadow;
        }
    }
    // Set validation states also for addons
    .input-group-addon {
        color: $text-color;
        border-color: $border-color;
        background-color: $background-color;
    }
}

@mixin form-inline {
    // Kick in the inline
    @media (min-width: $screen-sm-min) {
        // Inline-block all the things for "inline"
        .form-group {
            display: inline-block;
            margin-bottom: 0;
            vertical-align: middle;
        }

        // In navbar-form, allow folks to *not* use .form-group
        .form-control {
            display: inline-block;
            width: auto; // Prevent labels from stacking above inputs in .form-group
            vertical-align: middle;
        }

        .input-group {
            display: inline-table;
            vertical-align: middle;

            .input-group-addon,
            .input-group-btn,
            .form-control {
                width: auto;
            }
        }

        // Input groups need that 100% width though
        .input-group > .form-control {
            width: 100%;
        }

        .control-label {
            margin-bottom: 0;
            vertical-align: middle;
        }

        // Remove default margin on radios/checkboxes that were used for stacking, and then undo the floating of radios and checkboxes to match
        .radio,
        .checkbox {
            display: inline-block;
            margin-top: 0;
            margin-bottom: 0;
            vertical-align: middle;

            label {
                padding-left: 0;
            }
        }
        .radio input[type="radio"],
        .checkbox input[type="checkbox"] {
            position: relative;
            margin-left: 0;
        }
    }
}


// Normalize
// --------------------------------------------------------------------------

fieldset {
    padding: 0;
    margin: 0;
    border: 0;
    min-width: 0; // Reset Chrome and Firefox min-width: min-content; on fieldsets
}

legend {
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: $line-height-computed;
    font-size: ($font-size-base * 1.5);
    line-height: inherit;
    color: $legend-color;
    border: 0;
    border-bottom: 1px solid $legend-border-color;
}

label {
    display: inline-block;
    max-width: 100%; // Force IE8 to wrap long content
    margin-bottom: 5px;
    font-weight: bold;
}

// Override content-box in Normalize
input[type="search"] {
    box-sizing: border-box;
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
    margin: 4px 0 0;
    margin-top: 1px \9; // IE8-9
    line-height: normal;
}

// Set the height of file controls to match text inputs
input[type="file"] {
    display: block;
}

// Make range inputs behave like textual form controls
input[type="range"] {
    display: block;
    width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
    height: auto;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
    @include tab-focus();
}

// Adjust output element
output {
    display: block;
    padding-top: ($padding-base-vertical + 1);
    font-size: $font-size-base;
    line-height: $line-height-base;
    color: $input-color;
}

// Disable spin buttons on number inputs
input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type=number] {
    -moz-appearance: textfield;
}


// Common form controls
// Apply .form-control to any of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]
// --------------------------------------------------------------------------

.form-control {
    display: block;
    width: 100%;
    height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
    padding: $padding-base-vertical $padding-base-horizontal;
    font-size: $font-size-base;
    line-height: $line-height-base;
    color: $input-color;
    background-color: $input-bg;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid $input-border;
    border-radius: $border-radius-base;
    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
    transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;

    // Customize the :focus state to imitate native WebKit styles.
    @include form-control-focus;

    // Placeholder
    @include placeholder;

    // Disabled and read-only inputs
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        cursor: $cursor-disabled;
        background-color: $input-bg-disabled;
        opacity: 1; // iOS fix for unreadable disabled content
    }
}

// Reset height for textarea
textarea.form-control {
    height: auto;
}

// Search inputs in iOS
input[type="search"] {
    -webkit-appearance: none;
}

// Special styles for iOS temporal inputs
@media screen and (-webkit-min-device-pixel-ratio: 0) {
    input[type="date"],
    input[type="time"],
    input[type="datetime-local"],
    input[type="month"] {
        line-height: $input-height-base;
    }
    input[type="date"].input-sm,
    input[type="time"].input-sm,
    input[type="datetime-local"].input-sm,
    input[type="month"].input-sm {
        line-height: $input-height-small;
    }
    input[type="date"].input-lg,
    input[type="time"].input-lg,
    input[type="datetime-local"].input-lg,
    input[type="month"].input-lg {
        line-height: $input-height-large;
    }
}


// Form groups
// --------------------------------------------------------------------------

.form-group {
    margin-bottom: 15px;
}


// Checkboxes and radios
// --------------------------------------------------------------------------

.radio,
.checkbox {
    position: relative;
    display: block;
    margin-top: 10px;
    margin-bottom: 10px;

    label {
        min-height: $line-height-computed; // Ensure the input doesn't jump when there is no text
        padding-left: 20px;
        margin-bottom: 0;
        font-weight: normal;
        cursor: pointer;
    }
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
    position: absolute;
    margin-left: -20px;
    margin-top: 4px \9;
}

.radio + .radio,
.checkbox + .checkbox {
    margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
    display: inline-block;
    padding-left: 20px;
    margin-bottom: 0;
    vertical-align: middle;
    font-weight: normal;
    cursor: pointer;
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
    margin-top: 0;
    margin-left: 20px; // space out consecutive inline controls
}

// Apply same disabled cursor tweak as for inputs
input[type="radio"],
input[type="checkbox"] {
    &[disabled],
    &.disabled,
    fieldset[disabled] & {
        cursor: $cursor-disabled;
    }
}
// These classes are used directly on <label>s
.radio-inline,
.checkbox-inline {
    &.disabled,
    fieldset[disabled] & {
        cursor: $cursor-disabled;
    }
}
// These classes are used on elements with <label> descendants
.radio,
.checkbox {
    &.disabled,
    fieldset[disabled] & {
        label {
            cursor: $cursor-disabled;
        }
    }
}


// Static form control text
// Apply class to a <p> element to make any string of text align with labels in a horizontal form layout.
// --------------------------------------------------------------------------

.form-control-static {
    // Size it appropriately next to real form controls
    padding-top: ($padding-base-vertical + 1);
    padding-bottom: ($padding-base-vertical + 1);
    // Remove default margin from <p>
    margin-bottom: 0;

    &.input-lg,
    &.input-sm {
        padding-left: 0;
        padding-right: 0;
    }
}


// Form control sizing
// --------------------------------------------------------------------------

@include input-size('.input-sm', $input-height-small, $padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $border-radius-small);
@include input-size('.form-group-sm .form-control', $input-height-small, $padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $input-border-radius-small);

@include input-size('.input-lg', $input-height-large, $padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $border-radius-large);
@include input-size('.form-group-lg .form-control', $input-height-large, $padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $input-border-radius-large);


// Feedback states
// --------------------------------------------------------------------------

.has-success {
  @include form-control-validation($state-success-text, $state-success-text, $state-success-bg);
}

.has-warning {
  @include form-control-validation($state-warning-text, $state-warning-text, $state-warning-bg);
}

.has-error {
  @include form-control-validation($state-danger-text, $state-danger-text, $state-danger-bg);
}


// Help text
// --------------------------------------------------------------------------

.help-block {
    display: block; // account for any element using help-block
    margin-top: 5px;
    margin-bottom: 10px;
    color: lighten($text-color, 25%); // lighten the text some for contrast

    a {
        color: lighten($text-color, 25%);

        &:hover {
            text-decoration: underline;
        }
    }
}


// Inline forms
// --------------------------------------------------------------------------

.form-inline {
    @include form-inline;
}


// Horizontal forms
// --------------------------------------------------------------------------

.form-horizontal {

    // Consistent vertical alignment of radios and checkboxes
    // Labels also get some reset styles, but that is scoped to a media query below.
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline {
        margin-top: 0;
        margin-bottom: 0;
        padding-top: ($padding-base-vertical + 1); // Default padding plus a border
    }
    // Ensure the alignment and of help text and other content below items
    .radio,
    .checkbox {
        min-height: ($line-height-computed + ($padding-base-vertical + 1));
    }

    // Make form groups behave like rows
    .form-group {
        @include make-row;
    }

    // Reset spacing and right align labels
    @media (min-width: $screen-sm-min) {
        .control-label {
            text-align: right;
            margin-bottom: 0;
            padding-top: ($padding-base-vertical + 1); // Default padding plus a border
        }
    }

    // Form group sizes
    .form-group-lg {
        @media (min-width: $screen-sm-min) {
            .control-label {
                padding-top: (($padding-large-vertical * $line-height-large) + 1);
            }
        }
        .form-control {
            @extend .input-lg;
        }
    }
    .form-group-sm {
        @media (min-width: $screen-sm-min) {
            .control-label {
                padding-top: ($padding-small-vertical + 1);
            }
        }
        .form-control {
            @extend .input-sm;
        }
    }
}


// Input groups
// --------------------------------------------------------------------------

.input-group {
    position: relative; // For dropdowns
    display: table;
    border-collapse: separate; // prevent input groups from inheriting border styles from table cells when placed within a table

    // Undo padding and float of grid classes
    &[class*="col-"] {
        float: none;
        padding-left: 0;
        padding-right: 0;
    }

    .form-control {
        // Ensure that the input is always above the *appended* addon button for
        // proper border colors.
        position: relative;
        z-index: 2;

        // IE9 fubars the placeholder attribute in text inputs and the arrows on
        // select elements in input groups. To fix it, we float the input.
        float: left;

        width: 100%;
        margin-bottom: 0;
    }
}

.input-group-addon,
.input-group-btn,
.input-group .form-control {
    display: table-cell;

    &:not(:first-child):not(:last-child) {
        border-radius: 0;
    }
}

.input-group-addon,
.input-group-btn {
    width: 1%;
    white-space: nowrap;
    vertical-align: middle;
}

// Text input groups
.input-group-addon {
    padding: $padding-base-vertical $padding-base-horizontal;
    font-size: $font-size-base;
    font-weight: normal;
    line-height: 1;
    color: $input-color;
    text-align: center;
    background-color: $input-group-addon-bg;
    border: 1px solid $input-group-addon-border-color;
    border-radius: $border-radius-base;

    // Sizing
    &.input-sm {
        padding: $padding-small-vertical $padding-small-horizontal;
        font-size: $font-size-small;
        border-radius: $border-radius-small;
    }
    &.input-lg {
        padding: $padding-large-vertical $padding-large-horizontal;
        font-size: $font-size-large;
        border-radius: $border-radius-large;
    }

    // Nuke default margins from checkboxes and radios to vertically center within.
    input[type="radio"],
    input[type="checkbox"] {
        margin-top: 0;
    }
}

// Button input groups
.input-group-btn {
    position: relative;
    font-size: 0;

    > .btn {
        position: relative;
        z-index: 2;

        + .btn {
            margin-left: -1px;
        }
    }

    // Negative margin to only have a 1px border between the two
    &:first-child {
        > .btn,
        > .btn-group {
            margin-right: -1px;
        }
    }
    &:last-child {
        > .btn,
        > .btn-group {
            margin-left: -1px;
        }
    }

    &:not(:first-child):not(:last-child) {
        border-radius: 0;
    }
}


// Input number plugin (JS)
// --------------------------------------------------------------------------

.input-number {
    position: relative;
    display: inline-block;

    button {
        position: absolute;
        top: 1px;
        right: -17px;
        width: 14px;
        height: 15px;
        padding: 0;
        line-height: 15px;
        text-align: center;
        color: #fff;
        background-color: $color-primary;
        border: none;
        transition: background-color .1s linear;

        &:hover,
        &:focus {
            background-color: darken($color-primary, 5%);
        }
    }

    .minus {
        top: inherit;
        bottom: 1px;
    }
}
